
EKJModules.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000003e8  0000047c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  00000482  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000482  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000004f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c5f  00000000  00000000  00000574  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a2  00000000  00000000  000011d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000053c  00000000  00000000  00001a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00001fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000427  00000000  00000000  000020ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e4  00000000  00000000  00002513  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002af7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ee       	ldi	r30, 0xE8	; 232
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 30       	cpi	r26, 0x0A	; 10
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  9e:	0c 94 f2 01 	jmp	0x3e4	; 0x3e4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <io_new>:
}

// clear the pin (0)
void io_clear(volatile io_pin *pin)
{
	*pin->port &= ~(1<<pin->bit);	
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	ec 01       	movw	r28, r24
  ae:	16 2f       	mov	r17, r22
  b0:	87 e0       	ldi	r24, 0x07	; 7
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <malloc>
  b8:	fc 01       	movw	r30, r24
  ba:	d3 83       	std	Z+3, r29	; 0x03
  bc:	c2 83       	std	Z+2, r28	; 0x02
  be:	ce 01       	movw	r24, r28
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	91 83       	std	Z+1, r25	; 0x01
  c4:	80 83       	st	Z, r24
  c6:	22 97       	sbiw	r28, 0x02	; 2
  c8:	d5 83       	std	Z+5, r29	; 0x05
  ca:	c4 83       	std	Z+4, r28	; 0x04
  cc:	16 83       	std	Z+6, r17	; 0x06
  ce:	cf 01       	movw	r24, r30
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	1f 91       	pop	r17
  d6:	08 95       	ret

000000d8 <io_dir>:
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	fc 01       	movw	r30, r24
  de:	a0 81       	ld	r26, Z
  e0:	b1 81       	ldd	r27, Z+1	; 0x01
  e2:	c0 81       	ld	r28, Z
  e4:	d1 81       	ldd	r29, Z+1	; 0x01
  e6:	88 81       	ld	r24, Y
  e8:	96 81       	ldd	r25, Z+6	; 0x06
  ea:	21 e0       	ldi	r18, 0x01	; 1
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <io_dir+0x1c>
  f0:	22 0f       	add	r18, r18
  f2:	33 1f       	adc	r19, r19
  f4:	9a 95       	dec	r25
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <io_dir+0x18>
  f8:	96 81       	ldd	r25, Z+6	; 0x06
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <io_dir+0x2a>
  fe:	66 0f       	add	r22, r22
 100:	77 1f       	adc	r23, r23
 102:	9a 95       	dec	r25
 104:	e2 f7       	brpl	.-8      	; 0xfe <io_dir+0x26>
 106:	20 95       	com	r18
 108:	28 23       	and	r18, r24
 10a:	62 2b       	or	r22, r18
 10c:	6c 93       	st	X, r22
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <io_write>:
}

// write the value to pin
void io_write(volatile io_pin *pin, char value)
{
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	fc 01       	movw	r30, r24
	*pin->port = (*pin->port&~(1<<pin->bit)) | (value*(1<<pin->bit));
 11a:	a2 81       	ldd	r26, Z+2	; 0x02
 11c:	b3 81       	ldd	r27, Z+3	; 0x03
 11e:	c2 81       	ldd	r28, Z+2	; 0x02
 120:	d3 81       	ldd	r29, Z+3	; 0x03
 122:	88 81       	ld	r24, Y
 124:	96 81       	ldd	r25, Z+6	; 0x06
 126:	21 e0       	ldi	r18, 0x01	; 1
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <io_write+0x1c>
 12c:	22 0f       	add	r18, r18
 12e:	33 1f       	adc	r19, r19
 130:	9a 95       	dec	r25
 132:	e2 f7       	brpl	.-8      	; 0x12c <io_write+0x18>
 134:	96 81       	ldd	r25, Z+6	; 0x06
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <io_write+0x2a>
 13a:	66 0f       	add	r22, r22
 13c:	77 1f       	adc	r23, r23
 13e:	9a 95       	dec	r25
 140:	e2 f7       	brpl	.-8      	; 0x13a <io_write+0x26>
 142:	20 95       	com	r18
 144:	28 23       	and	r18, r24
 146:	62 2b       	or	r22, r18
 148:	6c 93       	st	X, r22
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <io_get>:

// get the output value at pin
char io_get(volatile io_pin *pin)
{
 150:	fc 01       	movw	r30, r24
	return (*pin->port >> pin->bit) & 1;
 152:	a2 81       	ldd	r26, Z+2	; 0x02
 154:	b3 81       	ldd	r27, Z+3	; 0x03
 156:	9c 91       	ld	r25, X
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	89 2f       	mov	r24, r25
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 c0       	rjmp	.+4      	; 0x164 <io_get+0x14>
 160:	95 95       	asr	r25
 162:	87 95       	ror	r24
 164:	2a 95       	dec	r18
 166:	e2 f7       	brpl	.-8      	; 0x160 <io_get+0x10>
}
 168:	81 70       	andi	r24, 0x01	; 1
 16a:	08 95       	ret

0000016c <main>:

int main(void)
{
	//uart_init(F_CPU, 9600, 128, 128);
	
	io_pin *pin = io_new(&PORTB, 0);
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	85 e2       	ldi	r24, 0x25	; 37
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 53 00 	call	0xa6	; 0xa6 <io_new>
 176:	ec 01       	movw	r28, r24
	io_dir(pin, IO_OUTPUT);
 178:	61 e0       	ldi	r22, 0x01	; 1
 17a:	0e 94 6c 00 	call	0xd8	; 0xd8 <io_dir>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	81 ee       	ldi	r24, 0xE1	; 225
 182:	94 e0       	ldi	r25, 0x04	; 4
 184:	21 50       	subi	r18, 0x01	; 1
 186:	80 40       	sbci	r24, 0x00	; 0
 188:	90 40       	sbci	r25, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x18>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x22>
 18e:	00 00       	nop
	//uart_write(DDRB);
	
	while(1)
	{
		_delay_ms(100);
		io_write(pin, io_get(pin) ^ 1);
 190:	ce 01       	movw	r24, r28
 192:	0e 94 a8 00 	call	0x150	; 0x150 <io_get>
 196:	61 e0       	ldi	r22, 0x01	; 1
 198:	68 27       	eor	r22, r24
 19a:	ce 01       	movw	r24, r28
 19c:	0e 94 8a 00 	call	0x114	; 0x114 <io_write>
 1a0:	ee cf       	rjmp	.-36     	; 0x17e <main+0x12>

000001a2 <malloc>:
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	82 30       	cpi	r24, 0x02	; 2
 1ac:	91 05       	cpc	r25, r1
 1ae:	10 f4       	brcc	.+4      	; 0x1b4 <malloc+0x12>
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 1b8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	a0 e0       	ldi	r26, 0x00	; 0
 1c2:	b0 e0       	ldi	r27, 0x00	; 0
 1c4:	30 97       	sbiw	r30, 0x00	; 0
 1c6:	19 f1       	breq	.+70     	; 0x20e <malloc+0x6c>
 1c8:	40 81       	ld	r20, Z
 1ca:	51 81       	ldd	r21, Z+1	; 0x01
 1cc:	02 81       	ldd	r16, Z+2	; 0x02
 1ce:	13 81       	ldd	r17, Z+3	; 0x03
 1d0:	48 17       	cp	r20, r24
 1d2:	59 07       	cpc	r21, r25
 1d4:	c8 f0       	brcs	.+50     	; 0x208 <malloc+0x66>
 1d6:	84 17       	cp	r24, r20
 1d8:	95 07       	cpc	r25, r21
 1da:	69 f4       	brne	.+26     	; 0x1f6 <malloc+0x54>
 1dc:	10 97       	sbiw	r26, 0x00	; 0
 1de:	31 f0       	breq	.+12     	; 0x1ec <malloc+0x4a>
 1e0:	12 96       	adiw	r26, 0x02	; 2
 1e2:	0c 93       	st	X, r16
 1e4:	12 97       	sbiw	r26, 0x02	; 2
 1e6:	13 96       	adiw	r26, 0x03	; 3
 1e8:	1c 93       	st	X, r17
 1ea:	27 c0       	rjmp	.+78     	; 0x23a <malloc+0x98>
 1ec:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 1f0:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 1f4:	22 c0       	rjmp	.+68     	; 0x23a <malloc+0x98>
 1f6:	21 15       	cp	r18, r1
 1f8:	31 05       	cpc	r19, r1
 1fa:	19 f0       	breq	.+6      	; 0x202 <malloc+0x60>
 1fc:	42 17       	cp	r20, r18
 1fe:	53 07       	cpc	r21, r19
 200:	18 f4       	brcc	.+6      	; 0x208 <malloc+0x66>
 202:	9a 01       	movw	r18, r20
 204:	bd 01       	movw	r22, r26
 206:	ef 01       	movw	r28, r30
 208:	df 01       	movw	r26, r30
 20a:	f8 01       	movw	r30, r16
 20c:	db cf       	rjmp	.-74     	; 0x1c4 <malloc+0x22>
 20e:	21 15       	cp	r18, r1
 210:	31 05       	cpc	r19, r1
 212:	f9 f0       	breq	.+62     	; 0x252 <malloc+0xb0>
 214:	28 1b       	sub	r18, r24
 216:	39 0b       	sbc	r19, r25
 218:	24 30       	cpi	r18, 0x04	; 4
 21a:	31 05       	cpc	r19, r1
 21c:	80 f4       	brcc	.+32     	; 0x23e <malloc+0x9c>
 21e:	8a 81       	ldd	r24, Y+2	; 0x02
 220:	9b 81       	ldd	r25, Y+3	; 0x03
 222:	61 15       	cp	r22, r1
 224:	71 05       	cpc	r23, r1
 226:	21 f0       	breq	.+8      	; 0x230 <malloc+0x8e>
 228:	fb 01       	movw	r30, r22
 22a:	93 83       	std	Z+3, r25	; 0x03
 22c:	82 83       	std	Z+2, r24	; 0x02
 22e:	04 c0       	rjmp	.+8      	; 0x238 <malloc+0x96>
 230:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 234:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 238:	fe 01       	movw	r30, r28
 23a:	32 96       	adiw	r30, 0x02	; 2
 23c:	44 c0       	rjmp	.+136    	; 0x2c6 <malloc+0x124>
 23e:	fe 01       	movw	r30, r28
 240:	e2 0f       	add	r30, r18
 242:	f3 1f       	adc	r31, r19
 244:	81 93       	st	Z+, r24
 246:	91 93       	st	Z+, r25
 248:	22 50       	subi	r18, 0x02	; 2
 24a:	31 09       	sbc	r19, r1
 24c:	39 83       	std	Y+1, r19	; 0x01
 24e:	28 83       	st	Y, r18
 250:	3a c0       	rjmp	.+116    	; 0x2c6 <malloc+0x124>
 252:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 256:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 25a:	23 2b       	or	r18, r19
 25c:	41 f4       	brne	.+16     	; 0x26e <malloc+0xcc>
 25e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 262:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 266:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__data_end+0x1>
 26a:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__data_end>
 26e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 272:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 276:	21 15       	cp	r18, r1
 278:	31 05       	cpc	r19, r1
 27a:	41 f4       	brne	.+16     	; 0x28c <malloc+0xea>
 27c:	2d b7       	in	r18, 0x3d	; 61
 27e:	3e b7       	in	r19, 0x3e	; 62
 280:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 284:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 288:	24 1b       	sub	r18, r20
 28a:	35 0b       	sbc	r19, r21
 28c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 290:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 294:	e2 17       	cp	r30, r18
 296:	f3 07       	cpc	r31, r19
 298:	a0 f4       	brcc	.+40     	; 0x2c2 <malloc+0x120>
 29a:	2e 1b       	sub	r18, r30
 29c:	3f 0b       	sbc	r19, r31
 29e:	28 17       	cp	r18, r24
 2a0:	39 07       	cpc	r19, r25
 2a2:	78 f0       	brcs	.+30     	; 0x2c2 <malloc+0x120>
 2a4:	ac 01       	movw	r20, r24
 2a6:	4e 5f       	subi	r20, 0xFE	; 254
 2a8:	5f 4f       	sbci	r21, 0xFF	; 255
 2aa:	24 17       	cp	r18, r20
 2ac:	35 07       	cpc	r19, r21
 2ae:	48 f0       	brcs	.+18     	; 0x2c2 <malloc+0x120>
 2b0:	4e 0f       	add	r20, r30
 2b2:	5f 1f       	adc	r21, r31
 2b4:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__data_end+0x1>
 2b8:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__data_end>
 2bc:	81 93       	st	Z+, r24
 2be:	91 93       	st	Z+, r25
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <malloc+0x124>
 2c2:	e0 e0       	ldi	r30, 0x00	; 0
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	cf 01       	movw	r24, r30
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	1f 91       	pop	r17
 2ce:	0f 91       	pop	r16
 2d0:	08 95       	ret

000002d2 <free>:
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	09 f4       	brne	.+2      	; 0x2dc <free+0xa>
 2da:	81 c0       	rjmp	.+258    	; 0x3de <free+0x10c>
 2dc:	fc 01       	movw	r30, r24
 2de:	32 97       	sbiw	r30, 0x02	; 2
 2e0:	13 82       	std	Z+3, r1	; 0x03
 2e2:	12 82       	std	Z+2, r1	; 0x02
 2e4:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 2e8:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 2ec:	10 97       	sbiw	r26, 0x00	; 0
 2ee:	81 f4       	brne	.+32     	; 0x310 <free+0x3e>
 2f0:	20 81       	ld	r18, Z
 2f2:	31 81       	ldd	r19, Z+1	; 0x01
 2f4:	82 0f       	add	r24, r18
 2f6:	93 1f       	adc	r25, r19
 2f8:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 2fc:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 300:	28 17       	cp	r18, r24
 302:	39 07       	cpc	r19, r25
 304:	51 f5       	brne	.+84     	; 0x35a <free+0x88>
 306:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 30a:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 30e:	67 c0       	rjmp	.+206    	; 0x3de <free+0x10c>
 310:	ed 01       	movw	r28, r26
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	ce 17       	cp	r28, r30
 318:	df 07       	cpc	r29, r31
 31a:	40 f4       	brcc	.+16     	; 0x32c <free+0x5a>
 31c:	4a 81       	ldd	r20, Y+2	; 0x02
 31e:	5b 81       	ldd	r21, Y+3	; 0x03
 320:	9e 01       	movw	r18, r28
 322:	41 15       	cp	r20, r1
 324:	51 05       	cpc	r21, r1
 326:	f1 f0       	breq	.+60     	; 0x364 <free+0x92>
 328:	ea 01       	movw	r28, r20
 32a:	f5 cf       	rjmp	.-22     	; 0x316 <free+0x44>
 32c:	d3 83       	std	Z+3, r29	; 0x03
 32e:	c2 83       	std	Z+2, r28	; 0x02
 330:	40 81       	ld	r20, Z
 332:	51 81       	ldd	r21, Z+1	; 0x01
 334:	84 0f       	add	r24, r20
 336:	95 1f       	adc	r25, r21
 338:	c8 17       	cp	r28, r24
 33a:	d9 07       	cpc	r29, r25
 33c:	59 f4       	brne	.+22     	; 0x354 <free+0x82>
 33e:	88 81       	ld	r24, Y
 340:	99 81       	ldd	r25, Y+1	; 0x01
 342:	84 0f       	add	r24, r20
 344:	95 1f       	adc	r25, r21
 346:	02 96       	adiw	r24, 0x02	; 2
 348:	91 83       	std	Z+1, r25	; 0x01
 34a:	80 83       	st	Z, r24
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	9b 81       	ldd	r25, Y+3	; 0x03
 350:	93 83       	std	Z+3, r25	; 0x03
 352:	82 83       	std	Z+2, r24	; 0x02
 354:	21 15       	cp	r18, r1
 356:	31 05       	cpc	r19, r1
 358:	29 f4       	brne	.+10     	; 0x364 <free+0x92>
 35a:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 35e:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 362:	3d c0       	rjmp	.+122    	; 0x3de <free+0x10c>
 364:	e9 01       	movw	r28, r18
 366:	fb 83       	std	Y+3, r31	; 0x03
 368:	ea 83       	std	Y+2, r30	; 0x02
 36a:	49 91       	ld	r20, Y+
 36c:	59 91       	ld	r21, Y+
 36e:	c4 0f       	add	r28, r20
 370:	d5 1f       	adc	r29, r21
 372:	ec 17       	cp	r30, r28
 374:	fd 07       	cpc	r31, r29
 376:	61 f4       	brne	.+24     	; 0x390 <free+0xbe>
 378:	80 81       	ld	r24, Z
 37a:	91 81       	ldd	r25, Z+1	; 0x01
 37c:	84 0f       	add	r24, r20
 37e:	95 1f       	adc	r25, r21
 380:	02 96       	adiw	r24, 0x02	; 2
 382:	e9 01       	movw	r28, r18
 384:	99 83       	std	Y+1, r25	; 0x01
 386:	88 83       	st	Y, r24
 388:	82 81       	ldd	r24, Z+2	; 0x02
 38a:	93 81       	ldd	r25, Z+3	; 0x03
 38c:	9b 83       	std	Y+3, r25	; 0x03
 38e:	8a 83       	std	Y+2, r24	; 0x02
 390:	e0 e0       	ldi	r30, 0x00	; 0
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	12 96       	adiw	r26, 0x02	; 2
 396:	8d 91       	ld	r24, X+
 398:	9c 91       	ld	r25, X
 39a:	13 97       	sbiw	r26, 0x03	; 3
 39c:	00 97       	sbiw	r24, 0x00	; 0
 39e:	19 f0       	breq	.+6      	; 0x3a6 <free+0xd4>
 3a0:	fd 01       	movw	r30, r26
 3a2:	dc 01       	movw	r26, r24
 3a4:	f7 cf       	rjmp	.-18     	; 0x394 <free+0xc2>
 3a6:	8d 91       	ld	r24, X+
 3a8:	9c 91       	ld	r25, X
 3aa:	11 97       	sbiw	r26, 0x01	; 1
 3ac:	9d 01       	movw	r18, r26
 3ae:	2e 5f       	subi	r18, 0xFE	; 254
 3b0:	3f 4f       	sbci	r19, 0xFF	; 255
 3b2:	82 0f       	add	r24, r18
 3b4:	93 1f       	adc	r25, r19
 3b6:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 3ba:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 3be:	28 17       	cp	r18, r24
 3c0:	39 07       	cpc	r19, r25
 3c2:	69 f4       	brne	.+26     	; 0x3de <free+0x10c>
 3c4:	30 97       	sbiw	r30, 0x00	; 0
 3c6:	29 f4       	brne	.+10     	; 0x3d2 <free+0x100>
 3c8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 3cc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <free+0x104>
 3d2:	13 82       	std	Z+3, r1	; 0x03
 3d4:	12 82       	std	Z+2, r1	; 0x02
 3d6:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x1>
 3da:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end>
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	08 95       	ret

000003e4 <_exit>:
 3e4:	f8 94       	cli

000003e6 <__stop_program>:
 3e6:	ff cf       	rjmp	.-2      	; 0x3e6 <__stop_program>
